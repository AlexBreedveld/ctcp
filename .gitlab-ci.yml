image: debian:latest

build_amd64:
  stage: build
  image: debian:latest
  tags:
    - shell
    - x86-64
  before_script:
    - echo "Setting up packages for Build"
    - sudo apt-get update && sudo apt-get install zip make rsync g++ -y
  script:
    - make
    - echo "Preparing release"
    - chmod +x ./build/ctcp
  after_script:
    - echo "JOB_ID=$CI_JOB_ID" >> job.env
  artifacts:
     paths:
       - ./build/ctcp
     expire_in: never
     reports:
       dotenv: job.env

build_arm64:
  stage: build
  image: debian:latest
  tags:
    - shell
    - arm64
  before_script:
    - echo "Setting up packages for Build"
    - sudo apt-get update && sudo apt-get install zip make rsync g++-aarch64-linux-gnu -y
  script:
    - bash ./.installer/clean.sh
    - sleep 2
    - mkdir ./build
    - aarch64-linux-gnu-g++ -Wall -o ./build/ctcp ctcp.cpp -I./src/ ./src/TCPServer.cpp ./src/TCPClient.cpp -std=c++11 -lpthread -static
    - echo "Preparing release"
    - chmod +x ./build/ctcp
  after_script:
    - echo "JOB_ID_ARM64=$CI_JOB_ID" >> job.env
  artifacts:
     paths:
       - ./build/ctcp
     expire_in: never
     reports:
       dotenv: job.env

create:release:
  stage: deploy
  tags:
    - docker
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: build_amd64
      artifacts: true
    - job: build_arm64
      artifacts: true
  variables:
    TAG: '$CI_COMMIT_SHA'
  script:
    - echo "Create Release $TAG"
    - echo "AMD64:\ $JOB_ID"
    - echo "ARM64:\ $JOB_ID_ARM64"
  release:
    name: 'cTCP Release $TAG'
    tag_name: '$TAG'
    ref: '$TAG'
    description: 'Release $TAG'
    assets:
      links:
        - name: "cTCP-x86_64"
          url: "https://git.al3xdev.com/al3xdev/ctcp/-/jobs/$JOB_ID/artifacts/download"
        - name: "cTCP-arm64"
          url: "https://git.al3xdev.com/al3xdev/ctcp/-/jobs/$JOB_ID_ARM64/artifacts/download"